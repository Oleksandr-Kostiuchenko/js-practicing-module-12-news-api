{"version":3,"file":"task-1.js","sources":["../src/js/task-2.js"],"sourcesContent":["//TODO: Practice with mock api\n//! =============================== Отримання списку постів (GET) ===============================\n//* Load library\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n//* Find elements\nconst postsContainer = document.querySelector('.posts-container');\nconst getPostBtn = document.querySelector('.get-post-btn');\nconst postContainer = document.querySelector('.post-container');\nconst idInput = document.querySelector('.user-id-input');\nconst idBtn = document.querySelector('.get-info-btn');\n\nconst titleInput = document.querySelector('.post-title-input');\nconst contentInput = document.querySelector('.post-content-input');\nconst createBtn = document.querySelector('.create-btn');\n\nconst updateTitleInput = document.querySelector('.post-title-update')\nconst updateContentInput = document.querySelector('.post-content-update')\nconst idInputUpdate = document.querySelector('.update-id-input');\nconst updateBtn = document.querySelector('.update-btn')\n\nconst deleteInput = document.querySelector('.post-id-delete');\nconst deleteBtn = document.querySelector('.delete-btn');\n\nconst loadBtn = document.querySelector('.load-btn');\nloadBtn.classList.add('is-hidden');\nlet postsHTML = [];\nlet page = 1;\nlet actualSearch = [];\n\n//* Add event listener\nconst onGetPostClick = event => {\n    fetch(`https://67911779af8442fd7378ff4e.mockapi.io/UserPosts?limit=10&page=${page}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n\n            loadBtn.classList.add('is-hidden');\n\n            return response.json();\n        })\n        .then(postsObj => {\n            postsHTML = [];\n            actualSearch = [];\n            postsContainer.innerHTML = '';\n            \n            postsObj.forEach(element => {\n                postsHTML.push(`\n                    <div class=\"post-container\">\n                        <h2 class=\"post-title\">${element.title} - ${element.author}</h2>\n                        <p class=\"post-content\">${element.content}</p>\n                        <p class=\"post-id\">POST ID:${element.id}</p>\n                    </div>\n                    `);\n                actualSearch.push(`\n                    <div class=\"post-container\">\n                        <h2 class=\"post-title\">${element.title} - ${element.author}</h2>\n                        <p class=\"post-content\">${element.content}</p>\n                        <p class=\"post-id\">POST ID:${element.id}</p>\n                    </div>\n                    `);\n            });\n\n            postsContainer.insertAdjacentHTML('beforeend', postsHTML.join(''));\n\n            loadBtn.classList.remove('is-hidden')\n        })\n}\n\ngetPostBtn.addEventListener('click', onGetPostClick);\nloadBtn.addEventListener('click', event => {\n\n    page++;\n    console.log(page);\n    onGetPostClick();\n})\n\n//! =============================== Отримання інформації про користувача за ID ===============================\nconst getUser = async id => {\n    try {\n        const response = await fetch(`https://67911779af8442fd7378ff4e.mockapi.io/UserPosts/${id}`);\n        \n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n\n        const postData = await response.json();\n        return {\n            name: postData.author,\n            email: postData.email\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nidBtn.addEventListener('click', async event => {\n    if (idInput.value.trim() === '') {\n        return;\n    }\n\n    try {\n        const author = await getUser(idInput.value.trim());\n        idInput.value = '';\n        \n        iziToast.info({\n            timeout: 7000,\n            overlay: true,\n            title: 'User Info:',\n            titleSize: '55',\n            message: `Name: ${author.name} | Email: ${author.email}`,\n            messageSize: '50',\n            position: 'center',\n            drag: false,\n        });\n\n        idInput.value = ''\n    } catch (err) {\n        iziToast.error({\n            timeout: 2000,\n            overlay: true,\n            title: 'Error',\n            titleSize: '55',\n            message: `User is not found!`,\n            messageSize: '50',\n            position: 'center',\n            drag: false,\n        });\n    }\n});\n\n//! =============================== Створення нового поста (POST) ===============================\nconst createPost = postInfo => {\n    try {\n        const fetchOptions = {\n            method: 'POST',\n            body: JSON.stringify(postInfo),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        return fetch(`https://67911779af8442fd7378ff4e.mockapi.io/UserPosts`, fetchOptions)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status)\n                }\n                \n                return response.json();\n            })\n    } catch (err) {\n        console.log(err);\n    }\n}\n\ncreateBtn.addEventListener('click', async event => {\n    if (titleInput.value.trim() === '' || contentInput.value.trim() === '') {\n        return;\n    }\n\n    try {\n        const newPost = {\n            author: 'Alex',\n            email: 'test@gmail.com',\n            title: `${titleInput.value}`,\n            content: `${contentInput.value}`\n        }\n\n        const response = await createPost(newPost);\n        titleInput.value = '';\n        contentInput.value = '';\n        onGetPostClick();\n    } catch (err) {\n        console.log(err);\n    }\n})\n\n//! =============================== Оновлення поста (PUT) ===============================\n//? Напиши функцію updatePost(id, newTitle, newBody), яка змінює існуючий пост (PUT-запит на https://jsonplaceholder.typicode.com/posts/{id}).\n\nconst updatePost = (id, newTitle, newBody) => {\n    try {\n        const newPost = {\n            title: newTitle,\n            content: newBody\n        }\n\n        const fetchOptions = {\n            method: 'PUT',\n            body: JSON.stringify(newPost),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        fetch(`https://67911779af8442fd7378ff4e.mockapi.io/UserPosts/${id}`, fetchOptions)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n\n                return response.json();\n            })\n        \n    } catch(err){\n        console.log(err);\n    }\n}\n\nupdateBtn.addEventListener('click', async event => {\n    if (idInputUpdate.value.trim() === '' || updateTitleInput.value.trim() === '' || updateContentInput.value.trim() === '') {\n        return\n    }\n    \n    try {\n        const response = await updatePost(idInputUpdate.value.trim(), updateTitleInput.value.trim(), updateContentInput.value.trim());\n        idInputUpdate.value = '';\n        updateTitleInput.value = '';\n        updateContentInput.value = '';\n        onGetPostClick();\n    } catch (err) {\n        console.log(err);\n    }\n})\n\n//! =============================== Видалення поста (DELETE) ===============================\n//? Напиши функцію deletePost(id), яка видаляє пост (DELETE-запит на https://jsonplaceholder.typicode.com/posts/{id}).\n\nconst deletPost = id => {\n    const fetchOptions = {\n        method: 'DELETE',\n    }\n\n    return fetch(`https://67911779af8442fd7378ff4e.mockapi.io/UserPosts/${id}/`, fetchOptions)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        })\n}\n\ndeleteBtn.addEventListener('click', async event => {\n    if (deleteInput.value.trim() === '') {\n        return;\n    }\n\n    try {\n        const response = await deletPost(deleteInput.value.trim());\n\n        deleteInput.value = '';\n        onGetPostClick();\n    } catch (err) {\n        console.log(err);\n    }\n})"],"names":["postsContainer","getPostBtn","idInput","idBtn","titleInput","contentInput","createBtn","updateTitleInput","updateContentInput","idInputUpdate","updateBtn","deleteInput","deleteBtn","loadBtn","postsHTML","page","actualSearch","onGetPostClick","event","response","postsObj","element","getUser","id","postData","err","author","iziToast","createPost","postInfo","fetchOptions","newPost","updatePost","newTitle","newBody","deletPost"],"mappings":"0xBACA;AAMA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAa,SAAS,cAAc,eAAe,EACnC,SAAS,cAAc,iBAAiB,EAC9D,MAAMC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAQ,SAAS,cAAc,eAAe,EAE9CC,EAAa,SAAS,cAAc,mBAAmB,EACvDC,EAAe,SAAS,cAAc,qBAAqB,EAC3DC,EAAY,SAAS,cAAc,aAAa,EAEhDC,EAAmB,SAAS,cAAc,oBAAoB,EAC9DC,EAAqB,SAAS,cAAc,sBAAsB,EAClEC,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAY,SAAS,cAAc,aAAa,EAEhDC,EAAc,SAAS,cAAc,iBAAiB,EACtDC,EAAY,SAAS,cAAc,aAAa,EAEhDC,EAAU,SAAS,cAAc,WAAW,EAClDA,EAAQ,UAAU,IAAI,WAAW,EACjC,IAAIC,EAAY,CAAA,EACZC,EAAO,EACPC,EAAe,CAAA,EAGnB,MAAMC,EAAiBC,GAAS,CAC5B,MAAM,uEAAuEH,CAAI,EAAE,EAC9E,KAAKI,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGnC,OAAAN,EAAQ,UAAU,IAAI,WAAW,EAE1BM,EAAS,MAC5B,CAAS,EACA,KAAKC,GAAY,CACdN,EAAY,CAAA,EACZE,EAAe,CAAA,EACfhB,EAAe,UAAY,GAE3BoB,EAAS,QAAQC,GAAW,CACxBP,EAAU,KAAK;AAAA;AAAA,iDAEkBO,EAAQ,KAAK,MAAMA,EAAQ,MAAM;AAAA,kDAChCA,EAAQ,OAAO;AAAA,qDACZA,EAAQ,EAAE;AAAA;AAAA,qBAE1C,EACLL,EAAa,KAAK;AAAA;AAAA,iDAEeK,EAAQ,KAAK,MAAMA,EAAQ,MAAM;AAAA,kDAChCA,EAAQ,OAAO;AAAA,qDACZA,EAAQ,EAAE;AAAA;AAAA,qBAE1C,CACrB,CAAa,EAEDrB,EAAe,mBAAmB,YAAac,EAAU,KAAK,EAAE,CAAC,EAEjED,EAAQ,UAAU,OAAO,WAAW,CAChD,CAAS,CACT,EAEAZ,EAAW,iBAAiB,QAASgB,CAAc,EACnDJ,EAAQ,iBAAiB,QAASK,GAAS,CAEvCH,IACA,QAAQ,IAAIA,CAAI,EAChBE,GACJ,CAAC,EAED;AACA,MAAMK,EAAU,MAAMC,GAAM,CACxB,GAAI,CACA,MAAMJ,EAAW,MAAM,MAAM,yDAAyDI,CAAE,EAAE,EAE1F,GAAI,CAACJ,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGnC,MAAMK,EAAW,MAAML,EAAS,OAChC,MAAO,CACH,KAAMK,EAAS,OACf,MAAOA,EAAS,KACnB,CACJ,OAAQC,EAAK,CACV,QAAQ,IAAIA,CAAG,CAClB,CACL,EAEAtB,EAAM,iBAAiB,QAAS,MAAMe,GAAS,CAC3C,GAAIhB,EAAQ,MAAM,KAAI,IAAO,GAI7B,GAAI,CACA,MAAMwB,EAAS,MAAMJ,EAAQpB,EAAQ,MAAM,KAAI,CAAE,EACjDA,EAAQ,MAAQ,GAEhByB,EAAS,KAAK,CACV,QAAS,IACT,QAAS,GACT,MAAO,aACP,UAAW,KACX,QAAS,SAASD,EAAO,IAAI,aAAaA,EAAO,KAAK,GACtD,YAAa,KACb,SAAU,SACV,KAAM,EAClB,CAAS,EAEDxB,EAAQ,MAAQ,EACnB,MAAa,CACVyB,EAAS,MAAM,CACX,QAAS,IACT,QAAS,GACT,MAAO,QACP,UAAW,KACX,QAAS,qBACT,YAAa,KACb,SAAU,SACV,KAAM,EAClB,CAAS,CACJ,CACL,CAAC,EAED;AACA,MAAMC,EAAaC,GAAY,CAC3B,GAAI,CACA,MAAMC,EAAe,CACjB,OAAQ,OACR,KAAM,KAAK,UAAUD,CAAQ,EAC7B,QAAS,CACL,eAAgB,kBACnB,CACJ,EAED,OAAO,MAAM,wDAAyDC,CAAY,EAC7E,KAAKX,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGnC,OAAOA,EAAS,MAChC,CAAa,CACR,OAAQM,EAAK,CACV,QAAQ,IAAIA,CAAG,CAClB,CACL,EAEAnB,EAAU,iBAAiB,QAAS,MAAMY,GAAS,CAC/C,GAAI,EAAAd,EAAW,MAAM,SAAW,IAAMC,EAAa,MAAM,KAAM,IAAK,IAIpE,GAAI,CACA,MAAM0B,EAAU,CACZ,OAAQ,OACR,MAAO,iBACP,MAAO,GAAG3B,EAAW,KAAK,GAC1B,QAAS,GAAGC,EAAa,KAAK,EACjC,EAEKc,EAAW,MAAMS,EAAWG,CAAO,EACzC3B,EAAW,MAAQ,GACnBC,EAAa,MAAQ,GACrBY,GACH,OAAQQ,EAAK,CACV,QAAQ,IAAIA,CAAG,CAClB,CACL,CAAC,EAED;AAGA,MAAMO,EAAa,CAACT,EAAIU,EAAUC,IAAY,CAC1C,GAAI,CAMA,MAAMJ,EAAe,CACjB,OAAQ,MACR,KAAM,KAAK,UAPC,CACZ,MAAOG,EACP,QAASC,CACZ,CAI+B,EAC5B,QAAS,CACL,eAAgB,kBACnB,CACJ,EAED,MAAM,yDAAyDX,CAAE,GAAIO,CAAY,EAC5E,KAAKX,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGnC,OAAOA,EAAS,MAChC,CAAa,CAER,OAAOM,EAAI,CACR,QAAQ,IAAIA,CAAG,CAClB,CACL,EAEAf,EAAU,iBAAiB,QAAS,MAAMQ,GAAS,CAC/C,GAAI,EAAAT,EAAc,MAAM,KAAI,IAAO,IAAMF,EAAiB,MAAM,KAAM,IAAK,IAAMC,EAAmB,MAAM,KAAI,IAAO,IAIrH,GAAI,CACA,MAAMW,EAAW,MAAMa,EAAWvB,EAAc,MAAM,KAAM,EAAEF,EAAiB,MAAM,KAAI,EAAIC,EAAmB,MAAM,KAAM,CAAA,EAC5HC,EAAc,MAAQ,GACtBF,EAAiB,MAAQ,GACzBC,EAAmB,MAAQ,GAC3BS,GACH,OAAQQ,EAAK,CACV,QAAQ,IAAIA,CAAG,CAClB,CACL,CAAC,EAED;AAGA,MAAMU,EAAYZ,GAAM,CACpB,MAAMO,EAAe,CACjB,OAAQ,QACX,EAED,OAAO,MAAM,yDAAyDP,CAAE,IAAKO,CAAY,EACpF,KAAKX,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAGnC,OAAOA,EAAS,MAC5B,CAAS,EACA,MAAMM,GAAO,CACV,QAAQ,IAAIA,CAAG,CAC3B,CAAS,CACT,EAEAb,EAAU,iBAAiB,QAAS,MAAMM,GAAS,CAC/C,GAAIP,EAAY,MAAM,KAAI,IAAO,GAIjC,GAAI,CACA,MAAMQ,EAAW,MAAMgB,EAAUxB,EAAY,MAAM,KAAI,CAAE,EAEzDA,EAAY,MAAQ,GACpBM,GACH,OAAQQ,EAAK,CACV,QAAQ,IAAIA,CAAG,CAClB,CACL,CAAC"}